### YamlMime:ManagedReference
items:
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  commentId: T:Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  id: HttpError401Handler
  parent: Kampute.HttpClient.ErrorHandlers
  children:
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.#ctor(System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}})
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle(System.Net.HttpStatusCode)
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose(System.Boolean)
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync(Kampute.HttpClient.HttpRestClient,System.String,System.String)
  - Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync(Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: HttpError401Handler
  nameWithType: HttpError401Handler
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  type: Class
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: HttpError401Handler
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 45
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Handles '401 Unauthorized' HTTP responses by attempting to re-authenticate and retry the request.
  remarks: >-
    <p>

    The <xref href="Kampute.HttpClient.ErrorHandlers.HttpError401Handler" data-throw-if-not-resolved="false"></xref> class is specifically designed to enhance instances of <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> by providing a mechanism

    to handle HTTP '401 Unauthorized' responses. When a request made by a <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance receives a '401 Unauthorized' status code,

    this indicates that the request was rejected due to insufficient or missing authentication credentials. The <xref href="Kampute.HttpClient.ErrorHandlers.HttpError401Handler" data-throw-if-not-resolved="false"></xref> responds 

    to such scenarios by initiating a re-authentication process using a delegate provided at instantiation, to obtain new authentication credentials.

    </p>

    <p>

    The delegate provided to the constructor is tasked with obtaining new authentication credentials, which might involve interacting with an authentication 

    server or prompting the user for credentials. Successful acquisition of new credentials leads to their application to the <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref>

    instance, allowing the previously failed request to be retried with the updated authentication details.

    </p>

    <p>

    When an authentication process is underway for a client, subsequent authentication requests from the client will not initiate new processes. Instead, they 

    will await and utilize the outcome of the ongoing authentication. This approach guarantees that the authentication delegate is executed a single time for 

    concurrent requests, ensuring both efficiency and thread safety.

    </p>

    <p>

    This error handler can be integrated with multiple <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instances, enabling centralized management of authentication challenges 

    across various client instances that interact with different endpoints. It is crucial, therefore, that the delegate provided for authentication is designed 

    to be thread-safe, ensuring consistent and safe operation across concurrent authentication processes.

    </p>
  example: []
  syntax:
    content: 'public class HttpError401Handler : IHttpErrorHandler, IDisposable'
    content.vb: Public Class HttpError401Handler Implements IHttpErrorHandler, IDisposable
  seealso:
  - linkId: Kampute.HttpClient.HttpRestClient.ErrorHandlers
    commentId: P:Kampute.HttpClient.HttpRestClient.ErrorHandlers
  inheritance:
  - System.Object
  implements:
  - Kampute.HttpClient.Interfaces.IHttpErrorHandler
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.#ctor(System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}})
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.#ctor(System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}})
  id: '#ctor(System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}})'
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: HttpError401Handler(Func<HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken, Task<AuthenticationHeaderValue?>>)
  nameWithType: HttpError401Handler.HttpError401Handler(Func<HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken, Task<AuthenticationHeaderValue?>>)
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.HttpError401Handler(System.Func<Kampute.HttpClient.HttpRestClient, System.Collections.Generic.IEnumerable<System.Net.Http.Headers.AuthenticationHeaderValue>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Net.Http.Headers.AuthenticationHeaderValue?>>)
  type: Constructor
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: .ctor
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 92
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Initializes a new instance of the <xref href="Kampute.HttpClient.ErrorHandlers.HttpError401Handler" data-throw-if-not-resolved="false"></xref> class.
  remarks: >-
    <p>

    The <code class="paramref">asyncAuthenticator</code> delegate is responsible for obtaining new authentication credentials, typically in response to an 

    authentication challenge indicated by an HTTP '401 Unauthorized' status code.

    </p>

    <p>

    The delegate should evaluate the provided challenges and return an instance of <xref href="System.Net.Http.Headers.AuthenticationHeaderValue" data-throw-if-not-resolved="false"></xref> containing the 

    authorization details necessary for subsequent requests if authentication can be successfully completed. If the authentication process 

    fails, or if no suitable challenge can be met, the delegate should return <code>null</code>.

    </p>

    <p>

    The delegate receives the following parameters:

    <ul><li><span class="term">client</span>The instance of <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> making the request that was challenged with a '401 Unauthorized' response. 

    This client can be used to perform further requests, such as retrieving a new token from an authentication server.</li><li><span class="term">challenges</span>The collection of <xref href="System.Net.Http.Headers.AuthenticationHeaderValue" data-throw-if-not-resolved="false"></xref> instances representing the server's authentication challenges.</li><li><span class="term">cancellationToken</span>A <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref> for canceling the operation.</li></ul>

    </p>

    <p>

    It is crucial to use the <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> provided to the delegate for any requests using the client that triggered the 

    authentication challenge, to prevent deadlocks caused by recurring 401 errors. This client is a temporary, cloned version of the original 

    client, created specifically for handling the authentication process. As such, any changes made to this clone's configuration will not 

    impact the original client. 

    </p>
  example: []
  syntax:
    content: public HttpError401Handler(Func<HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken, Task<AuthenticationHeaderValue?>> asyncAuthenticator)
    parameters:
    - id: asyncAuthenticator
      type: System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}}
      description: The asynchronous delegate to be invoked to acquire new authorization details.
    content.vb: Public Sub New(asyncAuthenticator As Func(Of HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken, Task(Of AuthenticationHeaderValue)))
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">asyncAuthenticator</code> is <code>null</code>.
  nameWithType.vb: HttpError401Handler.New(Func(Of HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken, Task(Of AuthenticationHeaderValue)))
  fullName.vb: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.New(System.Func(Of Kampute.HttpClient.HttpRestClient, System.Collections.Generic.IEnumerable(Of System.Net.Http.Headers.AuthenticationHeaderValue), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Net.Http.Headers.AuthenticationHeaderValue)))
  name.vb: New(Func(Of HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken, Task(Of AuthenticationHeaderValue)))
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose
  id: Dispose
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: HttpError401Handler.Dispose()
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose()
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: Dispose
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 100
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Releases the unmanaged resources used by the <xref href="Kampute.HttpClient.ErrorHandlers.HttpError401Handler" data-throw-if-not-resolved="false"></xref> and optionally disposes of the managed resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle(System.Net.HttpStatusCode)
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle(System.Net.HttpStatusCode)
  id: CanHandle(System.Net.HttpStatusCode)
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: CanHandle(HttpStatusCode)
  nameWithType: HttpError401Handler.CanHandle(HttpStatusCode)
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle(System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: CanHandle
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 114
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Determines whether this handler can process the specified HTTP status code.
  remarks: This implementation specifically handles the HTTP '401 Unauthorized' status code.
  example: []
  syntax:
    content: public bool CanHandle(HttpStatusCode statusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The HTTP status code to evaluate.
    return:
      type: System.Boolean
      description: <code>true</code> if the handler can process the status code; otherwise, <code>false</code>.
    content.vb: Public Function CanHandle(statusCode As HttpStatusCode) As Boolean
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle*
  implements:
  - Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync(Kampute.HttpClient.HttpRestClient,System.String,System.String)
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync(Kampute.HttpClient.HttpRestClient,System.String,System.String)
  id: TryAuthenticateAsync(Kampute.HttpClient.HttpRestClient,System.String,System.String)
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: TryAuthenticateAsync(HttpRestClient, string, string?)
  nameWithType: HttpError401Handler.TryAuthenticateAsync(HttpRestClient, string, string?)
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync(Kampute.HttpClient.HttpRestClient, string, string?)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: TryAuthenticateAsync
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 129
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Asynchronously attempts to authenticate the client by new authorization details.
  remarks: >-
    Upon successful authentication, this method directly updates the default request headers of the <code class="paramref">client</code> 

    with the provided authorization details, ensuring that all subsequent requests from the <code class="paramref">client</code> use these 

    credentials.
  example: []
  syntax:
    content: public virtual Task<bool> TryAuthenticateAsync(HttpRestClient client, string scheme, string? parameter = null)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The instance of <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> that requires authentication.
    - id: scheme
      type: System.String
      description: The desired authorization scheme, such as "Bearer" or "Basic".
    - id: parameter
      type: System.String
      description: An optional parameter for the authorization scheme.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if authorization details are successfully acquired and set; otherwise, <code>false</code>.
    content.vb: Public Overridable Function TryAuthenticateAsync(client As HttpRestClient, scheme As String, parameter As String = Nothing) As Task(Of Boolean)
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">scheme</code> is <code>null</code> or empty.
  nameWithType.vb: HttpError401Handler.TryAuthenticateAsync(HttpRestClient, String, String)
  fullName.vb: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync(Kampute.HttpClient.HttpRestClient, String, String)
  name.vb: TryAuthenticateAsync(HttpRestClient, String, String)
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose(System.Boolean)
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: HttpError401Handler.Dispose(bool)
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose(bool)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: Dispose
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 141
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Disposes the <xref href="Kampute.HttpClient.ErrorHandlers.HttpError401Handler" data-throw-if-not-resolved="false"></xref> instance.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Indicates whether the method is called from a <xref href="System.IDisposable.Dispose" data-throw-if-not-resolved="false"></xref> method.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose*
  nameWithType.vb: HttpError401Handler.Dispose(Boolean)
  fullName.vb: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync(Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync(Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken)
  id: TrySolveAuthenticationChallengeAsync(Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken)
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: TrySolveAuthenticationChallengeAsync(HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken)
  nameWithType: HttpError401Handler.TrySolveAuthenticationChallengeAsync(HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken)
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync(Kampute.HttpClient.HttpRestClient, System.Collections.Generic.IEnumerable<System.Net.Http.Headers.AuthenticationHeaderValue>, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: TrySolveAuthenticationChallengeAsync
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 161
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Attempts to solve at least one of the authentication challenges received from the server.
  example: []
  syntax:
    content: protected virtual Task<bool> TrySolveAuthenticationChallengeAsync(HttpRestClient client, IEnumerable<AuthenticationHeaderValue> challenges, CancellationToken cancellationToken)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance attempting to authenticate.
    - id: challenges
      type: System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue}
      description: A collection of <xref href="System.Net.Http.Headers.AuthenticationHeaderValue" data-throw-if-not-resolved="false"></xref> items representing the <code>WWW-Authenticate</code> headers received from a server response.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the operation.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: A task that resolves to <code>true</code> if the client successfully acquires and sets new authorization details; otherwise, <code>false</code>.
    content.vb: Protected Overridable Function TrySolveAuthenticationChallengeAsync(client As HttpRestClient, challenges As IEnumerable(Of AuthenticationHeaderValue), cancellationToken As CancellationToken) As Task(Of Boolean)
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Throws if <code class="paramref">client</code> or <code class="paramref">challenges</code> is <code>null</code>.
  nameWithType.vb: HttpError401Handler.TrySolveAuthenticationChallengeAsync(HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken)
  fullName.vb: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync(Kampute.HttpClient.HttpRestClient, System.Collections.Generic.IEnumerable(Of System.Net.Http.Headers.AuthenticationHeaderValue), System.Threading.CancellationToken)
  name.vb: TrySolveAuthenticationChallengeAsync(HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken)
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  id: DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  parent: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  langs:
  - csharp
  - vb
  name: DecideOnRetryAsync(HttpResponseErrorContext, CancellationToken)
  nameWithType: HttpError401Handler.DecideOnRetryAsync(HttpResponseErrorContext, CancellationToken)
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: DecideOnRetryAsync
    path: src/Kampute.HttpClient/ErrorHandlers/HttpError401Handler.cs
    startLine: 234
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.ErrorHandlers
  summary: Attempts to recover from an unauthorized request error by re-authenticating and retrying the request.
  remarks: >-
    This method attempts to re-authenticate the client in response to an '401 Unauthorized'. The process involves:

    <ul><li>Invoking the provided asynchronous delegate to obtain new authorization details.</li><li>If authentication is successful, the method clones the original request, updates it with the new authorization 

    header, and returns <xref href="Kampute.HttpClient.HttpErrorHandlerResult.Retry(System.Net.Http.HttpRequestMessage)" data-throw-if-not-resolved="false"></xref> with the updated request, indicating that 

    the request should be retried.</li><li>If authentication cannot be successfully completed or if no suitable challenge can be met, the method returns 

    <xref href="Kampute.HttpClient.HttpErrorHandlerResult.NoRetry" data-throw-if-not-resolved="false"></xref>, indicating that the request cannot be recovered by this handler.</li></ul>
  example: []
  syntax:
    content: protected virtual Task<HttpErrorHandlerResult> DecideOnRetryAsync(HttpResponseErrorContext ctx, CancellationToken cancellationToken)
    parameters:
    - id: ctx
      type: Kampute.HttpClient.HttpResponseErrorContext
      description: The context containing information about the HTTP response that indicates a failure.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the operation.
    return:
      type: System.Threading.Tasks.Task{Kampute.HttpClient.HttpErrorHandlerResult}
      description: A task that resolves to an <xref href="Kampute.HttpClient.HttpErrorHandlerResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Overridable Function DecideOnRetryAsync(ctx As HttpResponseErrorContext, cancellationToken As CancellationToken) As Task(Of HttpErrorHandlerResult)
  overload: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Throws if <code class="paramref">ctx</code> is <code>null</code>.
references:
- uid: Kampute.HttpClient.HttpRestClient.ErrorHandlers
  commentId: P:Kampute.HttpClient.HttpRestClient.ErrorHandlers
  href: Kampute.HttpClient.HttpRestClient.html#Kampute_HttpClient_HttpRestClient_ErrorHandlers
  name: ErrorHandlers
  nameWithType: HttpRestClient.ErrorHandlers
  fullName: Kampute.HttpClient.HttpRestClient.ErrorHandlers
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  commentId: T:Kampute.HttpClient.ErrorHandlers.HttpError401Handler
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html
  name: HttpError401Handler
  nameWithType: HttpError401Handler
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler
- uid: Kampute.HttpClient.HttpRestClient
  commentId: T:Kampute.HttpClient.HttpRestClient
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpRestClient.html
  name: HttpRestClient
  nameWithType: HttpRestClient
  fullName: Kampute.HttpClient.HttpRestClient
- uid: Kampute.HttpClient.ErrorHandlers
  commentId: N:Kampute.HttpClient.ErrorHandlers
  href: Kampute.html
  name: Kampute.HttpClient.ErrorHandlers
  nameWithType: Kampute.HttpClient.ErrorHandlers
  fullName: Kampute.HttpClient.ErrorHandlers
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.ErrorHandlers
    name: ErrorHandlers
    href: Kampute.HttpClient.ErrorHandlers.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.ErrorHandlers
    name: ErrorHandlers
    href: Kampute.HttpClient.ErrorHandlers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  commentId: T:Kampute.HttpClient.Interfaces.IHttpErrorHandler
  parent: Kampute.HttpClient.Interfaces
  href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html
  name: IHttpErrorHandler
  nameWithType: IHttpErrorHandler
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Kampute.HttpClient
  commentId: N:Kampute.HttpClient
  href: Kampute.html
  name: Kampute.HttpClient
  nameWithType: Kampute.HttpClient
  fullName: Kampute.HttpClient
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Kampute.HttpClient.Interfaces
  commentId: N:Kampute.HttpClient.Interfaces
  href: Kampute.html
  name: Kampute.HttpClient.Interfaces
  nameWithType: Kampute.HttpClient.Interfaces
  fullName: Kampute.HttpClient.Interfaces
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.Interfaces
    name: Interfaces
    href: Kampute.HttpClient.Interfaces.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.Interfaces
    name: Interfaces
    href: Kampute.HttpClient.Interfaces.html
- uid: System.Net.Http.Headers.AuthenticationHeaderValue
  commentId: T:System.Net.Http.Headers.AuthenticationHeaderValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  name: AuthenticationHeaderValue
  nameWithType: AuthenticationHeaderValue
  fullName: System.Net.Http.Headers.AuthenticationHeaderValue
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.#ctor*
  commentId: Overload:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.#ctor
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html#Kampute_HttpClient_ErrorHandlers_HttpError401Handler__ctor_System_Func_Kampute_HttpClient_HttpRestClient_System_Collections_Generic_IEnumerable_System_Net_Http_Headers_AuthenticationHeaderValue__System_Threading_CancellationToken_System_Threading_Tasks_Task_System_Net_Http_Headers_AuthenticationHeaderValue___
  name: HttpError401Handler
  nameWithType: HttpError401Handler.HttpError401Handler
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.HttpError401Handler
  nameWithType.vb: HttpError401Handler.New
  fullName.vb: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.New
  name.vb: New
- uid: System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}}
  commentId: T:System.Func{Kampute.HttpClient.HttpRestClient,System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Net.Http.Headers.AuthenticationHeaderValue}}
  parent: System
  definition: System.Func`4
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken, Task<AuthenticationHeaderValue>>
  nameWithType: Func<HttpRestClient, IEnumerable<AuthenticationHeaderValue>, CancellationToken, Task<AuthenticationHeaderValue>>
  fullName: System.Func<Kampute.HttpClient.HttpRestClient, System.Collections.Generic.IEnumerable<System.Net.Http.Headers.AuthenticationHeaderValue>, System.Threading.CancellationToken, System.Threading.Tasks.Task<System.Net.Http.Headers.AuthenticationHeaderValue>>
  nameWithType.vb: Func(Of HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken, Task(Of AuthenticationHeaderValue))
  fullName.vb: System.Func(Of Kampute.HttpClient.HttpRestClient, System.Collections.Generic.IEnumerable(Of System.Net.Http.Headers.AuthenticationHeaderValue), System.Threading.CancellationToken, System.Threading.Tasks.Task(Of System.Net.Http.Headers.AuthenticationHeaderValue))
  name.vb: Func(Of HttpRestClient, IEnumerable(Of AuthenticationHeaderValue), CancellationToken, Task(Of AuthenticationHeaderValue))
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - uid: Kampute.HttpClient.HttpRestClient
    name: HttpRestClient
    href: Kampute.HttpClient.HttpRestClient.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - uid: Kampute.HttpClient.HttpRestClient
    name: HttpRestClient
    href: Kampute.HttpClient.HttpRestClient.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Func`4
  commentId: T:System.Func`4
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-4
  name: Func<T1, T2, T3, TResult>
  nameWithType: Func<T1, T2, T3, TResult>
  fullName: System.Func<T1, T2, T3, TResult>
  nameWithType.vb: Func(Of T1, T2, T3, TResult)
  fullName.vb: System.Func(Of T1, T2, T3, TResult)
  name.vb: Func(Of T1, T2, T3, TResult)
  spec.csharp:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose*
  commentId: Overload:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html#Kampute_HttpClient_ErrorHandlers_HttpError401Handler_Dispose
  name: Dispose
  nameWithType: HttpError401Handler.Dispose
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle*
  commentId: Overload:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html#Kampute_HttpClient_ErrorHandlers_HttpError401Handler_CanHandle_System_Net_HttpStatusCode_
  name: CanHandle
  nameWithType: HttpError401Handler.CanHandle
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.CanHandle
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  commentId: M:Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  parent: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  isExternal: true
  href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html#Kampute_HttpClient_Interfaces_IHttpErrorHandler_CanHandle_System_Net_HttpStatusCode_
  name: CanHandle(HttpStatusCode)
  nameWithType: IHttpErrorHandler.CanHandle(HttpStatusCode)
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  spec.csharp:
  - uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
    name: CanHandle
    href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html#Kampute_HttpClient_Interfaces_IHttpErrorHandler_CanHandle_System_Net_HttpStatusCode_
  - name: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.httpstatuscode
  - name: )
  spec.vb:
  - uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
    name: CanHandle
    href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html#Kampute_HttpClient_Interfaces_IHttpErrorHandler_CanHandle_System_Net_HttpStatusCode_
  - name: (
  - uid: System.Net.HttpStatusCode
    name: HttpStatusCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.httpstatuscode
  - name: )
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.httpstatuscode
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync*
  commentId: Overload:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html#Kampute_HttpClient_ErrorHandlers_HttpError401Handler_TryAuthenticateAsync_Kampute_HttpClient_HttpRestClient_System_String_System_String_
  name: TryAuthenticateAsync
  nameWithType: HttpError401Handler.TryAuthenticateAsync
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TryAuthenticateAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync*
  commentId: Overload:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html#Kampute_HttpClient_ErrorHandlers_HttpError401Handler_TrySolveAuthenticationChallengeAsync_Kampute_HttpClient_HttpRestClient_System_Collections_Generic_IEnumerable_System_Net_Http_Headers_AuthenticationHeaderValue__System_Threading_CancellationToken_
  name: TrySolveAuthenticationChallengeAsync
  nameWithType: HttpError401Handler.TrySolveAuthenticationChallengeAsync
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.TrySolveAuthenticationChallengeAsync
- uid: System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue}
  commentId: T:System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AuthenticationHeaderValue>
  nameWithType: IEnumerable<AuthenticationHeaderValue>
  fullName: System.Collections.Generic.IEnumerable<System.Net.Http.Headers.AuthenticationHeaderValue>
  nameWithType.vb: IEnumerable(Of AuthenticationHeaderValue)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Net.Http.Headers.AuthenticationHeaderValue)
  name.vb: IEnumerable(Of AuthenticationHeaderValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.Headers.AuthenticationHeaderValue
    name: AuthenticationHeaderValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.authenticationheadervalue
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Kampute.HttpClient.HttpErrorHandlerResult
  commentId: T:Kampute.HttpClient.HttpErrorHandlerResult
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpErrorHandlerResult.html
  name: HttpErrorHandlerResult
  nameWithType: HttpErrorHandlerResult
  fullName: Kampute.HttpClient.HttpErrorHandlerResult
- uid: Kampute.HttpClient.HttpErrorHandlerResult.Retry(System.Net.Http.HttpRequestMessage)
  commentId: M:Kampute.HttpClient.HttpErrorHandlerResult.Retry(System.Net.Http.HttpRequestMessage)
  isExternal: true
  href: Kampute.HttpClient.HttpErrorHandlerResult.html#Kampute_HttpClient_HttpErrorHandlerResult_Retry_System_Net_Http_HttpRequestMessage_
  name: Retry(HttpRequestMessage)
  nameWithType: HttpErrorHandlerResult.Retry(HttpRequestMessage)
  fullName: Kampute.HttpClient.HttpErrorHandlerResult.Retry(System.Net.Http.HttpRequestMessage)
  spec.csharp:
  - uid: Kampute.HttpClient.HttpErrorHandlerResult.Retry(System.Net.Http.HttpRequestMessage)
    name: Retry
    href: Kampute.HttpClient.HttpErrorHandlerResult.html#Kampute_HttpClient_HttpErrorHandlerResult_Retry_System_Net_Http_HttpRequestMessage_
  - name: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  - name: )
  spec.vb:
  - uid: Kampute.HttpClient.HttpErrorHandlerResult.Retry(System.Net.Http.HttpRequestMessage)
    name: Retry
    href: Kampute.HttpClient.HttpErrorHandlerResult.html#Kampute_HttpClient_HttpErrorHandlerResult_Retry_System_Net_Http_HttpRequestMessage_
  - name: (
  - uid: System.Net.Http.HttpRequestMessage
    name: HttpRequestMessage
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestmessage
  - name: )
- uid: Kampute.HttpClient.HttpErrorHandlerResult.NoRetry
  commentId: F:Kampute.HttpClient.HttpErrorHandlerResult.NoRetry
  href: Kampute.HttpClient.HttpErrorHandlerResult.html#Kampute_HttpClient_HttpErrorHandlerResult_NoRetry
  name: NoRetry
  nameWithType: HttpErrorHandlerResult.NoRetry
  fullName: Kampute.HttpClient.HttpErrorHandlerResult.NoRetry
- uid: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync*
  commentId: Overload:Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync
  href: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.html#Kampute_HttpClient_ErrorHandlers_HttpError401Handler_DecideOnRetryAsync_Kampute_HttpClient_HttpResponseErrorContext_System_Threading_CancellationToken_
  name: DecideOnRetryAsync
  nameWithType: HttpError401Handler.DecideOnRetryAsync
  fullName: Kampute.HttpClient.ErrorHandlers.HttpError401Handler.DecideOnRetryAsync
- uid: Kampute.HttpClient.HttpResponseErrorContext
  commentId: T:Kampute.HttpClient.HttpResponseErrorContext
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpResponseErrorContext.html
  name: HttpResponseErrorContext
  nameWithType: HttpResponseErrorContext
  fullName: Kampute.HttpClient.HttpResponseErrorContext
- uid: System.Threading.Tasks.Task{Kampute.HttpClient.HttpErrorHandlerResult}
  commentId: T:System.Threading.Tasks.Task{Kampute.HttpClient.HttpErrorHandlerResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpErrorHandlerResult>
  nameWithType: Task<HttpErrorHandlerResult>
  fullName: System.Threading.Tasks.Task<Kampute.HttpClient.HttpErrorHandlerResult>
  nameWithType.vb: Task(Of HttpErrorHandlerResult)
  fullName.vb: System.Threading.Tasks.Task(Of Kampute.HttpClient.HttpErrorHandlerResult)
  name.vb: Task(Of HttpErrorHandlerResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Kampute.HttpClient.HttpErrorHandlerResult
    name: HttpErrorHandlerResult
    href: Kampute.HttpClient.HttpErrorHandlerResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Kampute.HttpClient.HttpErrorHandlerResult
    name: HttpErrorHandlerResult
    href: Kampute.HttpClient.HttpErrorHandlerResult.html
  - name: )
