### YamlMime:ManagedReference
items:
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  commentId: T:Kampute.HttpClient.Interfaces.IHttpErrorHandler
  id: IHttpErrorHandler
  parent: Kampute.HttpClient.Interfaces
  children:
  - Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  - Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IHttpErrorHandler
  nameWithType: IHttpErrorHandler
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  type: Interface
  source:
    remote:
      path: src/Kampute.HttpClient/Interfaces/IHttpErrorHandler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: IHttpErrorHandler
    path: src/Kampute.HttpClient/Interfaces/IHttpErrorHandler.cs
    startLine: 31
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.Interfaces
  summary: Defines a contract for handling HTTP error status codes and determining retry logic in HTTP requests.
  remarks: >-
    <p>

    This interface provides a mechanism to extend the retry logic of the <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref>. By implementing this interface, 

    consumers of the client can implement custom logic to evaluate failure responses and decide whether to attempt a retry.

    </p>

    <p>

    Implementors can define their own strategies for handling specific HTTP error statuses, such as '401 Unauthorized' for re-authentication, 

    '429 Too Many Requests' for rate limit handling, or '503 Service Unavailable' for backoff and retry. This flexible approach allows for 

    sophisticated error handling and recovery mechanisms, tailored to the requirements of the application.

    </p>

    <p>

    The implementations of <xref href="Kampute.HttpClient.Interfaces.IHttpErrorHandler" data-throw-if-not-resolved="false"></xref> should be thread-safe and reusable across multiple error handling operations to 

    facilitate efficient processing of HTTP responses in a concurrent environment.

    </p>
  example: []
  syntax:
    content: public interface IHttpErrorHandler
    content.vb: Public Interface IHttpErrorHandler
  seealso:
  - linkId: Kampute.HttpClient.HttpRestClient.ErrorHandlers
    commentId: P:Kampute.HttpClient.HttpRestClient.ErrorHandlers
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  commentId: M:Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  id: CanHandle(System.Net.HttpStatusCode)
  parent: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  langs:
  - csharp
  - vb
  name: CanHandle(HttpStatusCode)
  nameWithType: IHttpErrorHandler.CanHandle(HttpStatusCode)
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle(System.Net.HttpStatusCode)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/Interfaces/IHttpErrorHandler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: CanHandle
    path: src/Kampute.HttpClient/Interfaces/IHttpErrorHandler.cs
    startLine: 38
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.Interfaces
  summary: Determines whether the handler is capable of handling the provided HTTP status code.
  example: []
  syntax:
    content: bool CanHandle(HttpStatusCode statusCode)
    parameters:
    - id: statusCode
      type: System.Net.HttpStatusCode
      description: The HTTP status code to evaluate.
    return:
      type: System.Boolean
      description: <code>true</code>if the handler can handle the specified status code; otherwise, <code>false</code>.
    content.vb: Function CanHandle(statusCode As HttpStatusCode) As Boolean
  overload: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle*
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  id: DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext,System.Threading.CancellationToken)
  parent: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  langs:
  - csharp
  - vb
  name: DecideOnRetryAsync(HttpResponseErrorContext, CancellationToken)
  nameWithType: IHttpErrorHandler.DecideOnRetryAsync(HttpResponseErrorContext, CancellationToken)
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync(Kampute.HttpClient.HttpResponseErrorContext, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/Interfaces/IHttpErrorHandler.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: DecideOnRetryAsync
    path: src/Kampute.HttpClient/Interfaces/IHttpErrorHandler.cs
    startLine: 47
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient.Interfaces
  summary: Evaluates whether a failed request should be retried based on the error context.
  example: []
  syntax:
    content: Task<HttpErrorHandlerResult> DecideOnRetryAsync(HttpResponseErrorContext ctx, CancellationToken cancellationToken)
    parameters:
    - id: ctx
      type: Kampute.HttpClient.HttpResponseErrorContext
      description: The context containing information about the HTTP response that indicates a failure.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the operation.
    return:
      type: System.Threading.Tasks.Task{Kampute.HttpClient.HttpErrorHandlerResult}
      description: A task that resolves to an <xref href="Kampute.HttpClient.HttpErrorHandlerResult" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function DecideOnRetryAsync(ctx As HttpResponseErrorContext, cancellationToken As CancellationToken) As Task(Of HttpErrorHandlerResult)
  overload: Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">ctx</code> is <code>null</code>.
references:
- uid: Kampute.HttpClient.HttpRestClient.ErrorHandlers
  commentId: P:Kampute.HttpClient.HttpRestClient.ErrorHandlers
  href: Kampute.HttpClient.HttpRestClient.html#Kampute_HttpClient_HttpRestClient_ErrorHandlers
  name: ErrorHandlers
  nameWithType: HttpRestClient.ErrorHandlers
  fullName: Kampute.HttpClient.HttpRestClient.ErrorHandlers
- uid: Kampute.HttpClient.HttpRestClient
  commentId: T:Kampute.HttpClient.HttpRestClient
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpRestClient.html
  name: HttpRestClient
  nameWithType: HttpRestClient
  fullName: Kampute.HttpClient.HttpRestClient
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler
  commentId: T:Kampute.HttpClient.Interfaces.IHttpErrorHandler
  parent: Kampute.HttpClient.Interfaces
  href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html
  name: IHttpErrorHandler
  nameWithType: IHttpErrorHandler
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler
- uid: Kampute.HttpClient.Interfaces
  commentId: N:Kampute.HttpClient.Interfaces
  href: Kampute.html
  name: Kampute.HttpClient.Interfaces
  nameWithType: Kampute.HttpClient.Interfaces
  fullName: Kampute.HttpClient.Interfaces
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.Interfaces
    name: Interfaces
    href: Kampute.HttpClient.Interfaces.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.Interfaces
    name: Interfaces
    href: Kampute.HttpClient.Interfaces.html
- uid: Kampute.HttpClient
  commentId: N:Kampute.HttpClient
  href: Kampute.html
  name: Kampute.HttpClient
  nameWithType: Kampute.HttpClient
  fullName: Kampute.HttpClient
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle*
  commentId: Overload:Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle
  href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html#Kampute_HttpClient_Interfaces_IHttpErrorHandler_CanHandle_System_Net_HttpStatusCode_
  name: CanHandle
  nameWithType: IHttpErrorHandler.CanHandle
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler.CanHandle
- uid: System.Net.HttpStatusCode
  commentId: T:System.Net.HttpStatusCode
  parent: System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.httpstatuscode
  name: HttpStatusCode
  nameWithType: HttpStatusCode
  fullName: System.Net.HttpStatusCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Kampute.HttpClient.HttpErrorHandlerResult
  commentId: T:Kampute.HttpClient.HttpErrorHandlerResult
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpErrorHandlerResult.html
  name: HttpErrorHandlerResult
  nameWithType: HttpErrorHandlerResult
  fullName: Kampute.HttpClient.HttpErrorHandlerResult
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync*
  commentId: Overload:Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync
  href: Kampute.HttpClient.Interfaces.IHttpErrorHandler.html#Kampute_HttpClient_Interfaces_IHttpErrorHandler_DecideOnRetryAsync_Kampute_HttpClient_HttpResponseErrorContext_System_Threading_CancellationToken_
  name: DecideOnRetryAsync
  nameWithType: IHttpErrorHandler.DecideOnRetryAsync
  fullName: Kampute.HttpClient.Interfaces.IHttpErrorHandler.DecideOnRetryAsync
- uid: Kampute.HttpClient.HttpResponseErrorContext
  commentId: T:Kampute.HttpClient.HttpResponseErrorContext
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpResponseErrorContext.html
  name: HttpResponseErrorContext
  nameWithType: HttpResponseErrorContext
  fullName: Kampute.HttpClient.HttpResponseErrorContext
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{Kampute.HttpClient.HttpErrorHandlerResult}
  commentId: T:System.Threading.Tasks.Task{Kampute.HttpClient.HttpErrorHandlerResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpErrorHandlerResult>
  nameWithType: Task<HttpErrorHandlerResult>
  fullName: System.Threading.Tasks.Task<Kampute.HttpClient.HttpErrorHandlerResult>
  nameWithType.vb: Task(Of HttpErrorHandlerResult)
  fullName.vb: System.Threading.Tasks.Task(Of Kampute.HttpClient.HttpErrorHandlerResult)
  name.vb: Task(Of HttpErrorHandlerResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Kampute.HttpClient.HttpErrorHandlerResult
    name: HttpErrorHandlerResult
    href: Kampute.HttpClient.HttpErrorHandlerResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Kampute.HttpClient.HttpErrorHandlerResult
    name: HttpErrorHandlerResult
    href: Kampute.HttpClient.HttpErrorHandlerResult.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
