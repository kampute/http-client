### YamlMime:ManagedReference
items:
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  commentId: T:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  id: HttpRestClientJsonExtensions
  parent: Kampute.HttpClient.NewtonsoftJson
  children:
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  - Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  langs:
  - csharp
  - vb
  name: HttpRestClientJsonExtensions
  nameWithType: HttpRestClientJsonExtensions
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  type: Class
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: HttpRestClientJsonExtensions
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 24
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Provides extension methods for <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> to support JSON-based HTTP operations.
  remarks: >-
    This static class enhances <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> by offering methods specifically designed for handling HTTP 

    requests and responses that involve JSON data. It simplifies the process of sending and receiving JSON content, by 

    abstracting the serialization and deserialization of JSON to and from .NET objects.
  example: []
  syntax:
    content: public static class HttpRestClientJsonExtensions
    content.vb: Public Module HttpRestClientJsonExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  id: SetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: SetJsonSerializerSettings(HttpRestClient, JsonSerializerSettings?)
  nameWithType: HttpRestClientJsonExtensions.SetJsonSerializerSettings(HttpRestClient, JsonSerializerSettings?)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient, Newtonsoft.Json.JsonSerializerSettings?)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: SetJsonSerializerSettings
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 35
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Configures the <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> to use the specified settings when serializing payloads as JSON.
  example: []
  syntax:
    content: public static void SetJsonSerializerSettings(this HttpRestClient client, JsonSerializerSettings? settings)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to configure.
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> to use for serializing payload as JSON. if <code>null</code>, default settings will be used.
    content.vb: Public Shared Sub SetJsonSerializerSettings(client As HttpRestClient, settings As JsonSerializerSettings)
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings*
  nameWithType.vb: HttpRestClientJsonExtensions.SetJsonSerializerSettings(HttpRestClient, JsonSerializerSettings)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: SetJsonSerializerSettings(HttpRestClient, JsonSerializerSettings)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient)
  id: GetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: GetJsonSerializerSettings(HttpRestClient)
  nameWithType: HttpRestClientJsonExtensions.GetJsonSerializerSettings(HttpRestClient)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings(Kampute.HttpClient.HttpRestClient)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: GetJsonSerializerSettings
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 54
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Retrieves the settings used by the <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> when serializing payloads as JSON.
  example: []
  syntax:
    content: public static JsonSerializerSettings? GetJsonSerializerSettings(this HttpRestClient client)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to query.
    return:
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> if set; otherwise, <code>null</code>.
    content.vb: Public Shared Function GetJsonSerializerSettings(client As HttpRestClient) As JsonSerializerSettings
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings*
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  id: AcceptJson(Kampute.HttpClient.HttpRestClient,Newtonsoft.Json.JsonSerializerSettings)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: AcceptJson(HttpRestClient, JsonSerializerSettings?)
  nameWithType: HttpRestClientJsonExtensions.AcceptJson(HttpRestClient, JsonSerializerSettings?)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson(Kampute.HttpClient.HttpRestClient, Newtonsoft.Json.JsonSerializerSettings?)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: AcceptJson
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 71
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Configures the <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> to accept JSON responses by adding or updating a <xref href="Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer" data-throw-if-not-resolved="false"></xref> in its response deserializers collection.
  remarks: >-
    If the client already has a <xref href="Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer" data-throw-if-not-resolved="false"></xref>, this method updates its settings with the provided <code class="paramref">settings</code>.

    Otherwise, it adds a new <xref href="Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer" data-throw-if-not-resolved="false"></xref> with the specified settings to the client's response deserializers.
  example: []
  syntax:
    content: public static JsonContentDeserializer AcceptJson(this HttpRestClient client, JsonSerializerSettings? settings = null)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to configure.
    - id: settings
      type: Newtonsoft.Json.JsonSerializerSettings
      description: The <xref href="Newtonsoft.Json.JsonSerializerSettings" data-throw-if-not-resolved="false"></xref> to use for deserializing JSON responses. if <code>null</code>, default settings will be used.
    return:
      type: Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer
      description: The <xref href="Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer" data-throw-if-not-resolved="false"></xref> used for JSON content deserialization.
    content.vb: Public Shared Function AcceptJson(client As HttpRestClient, settings As JsonSerializerSettings = Nothing) As JsonContentDeserializer
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson*
  nameWithType.vb: HttpRestClientJsonExtensions.AcceptJson(HttpRestClient, JsonSerializerSettings)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson(Kampute.HttpClient.HttpRestClient, Newtonsoft.Json.JsonSerializerSettings)
  name.vb: AcceptJson(HttpRestClient, JsonSerializerSettings)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  id: SendAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: SendAsJsonAsync<T>(HttpRestClient, HttpMethod, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.SendAsJsonAsync<T>(HttpRestClient, HttpMethod, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync<T>(Kampute.HttpClient.HttpRestClient, System.Net.Http.HttpMethod, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: SendAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 98
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous request with JSON-formatted payload to the specified URI.
  example: []
  syntax:
    content: public static Task<T?> SendAsJsonAsync<T>(this HttpRestClient client, HttpMethod method, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: method
      type: System.Net.Http.HttpMethod
      description: The HTTP method to use for the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the object expected in the response.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function SendAsJsonAsync(Of T)(client As HttpRestClient, method As HttpMethod, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">method</code>, <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.SendAsJsonAsync(Of T)(HttpRestClient, HttpMethod, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync(Of T)(Kampute.HttpClient.HttpRestClient, System.Net.Http.HttpMethod, String, Object, System.Threading.CancellationToken)
  name.vb: SendAsJsonAsync(Of T)(HttpRestClient, HttpMethod, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  id: SendAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.Net.Http.HttpMethod,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: SendAsJsonAsync(HttpRestClient, HttpMethod, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.SendAsJsonAsync(HttpRestClient, HttpMethod, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync(Kampute.HttpClient.HttpRestClient, System.Net.Http.HttpMethod, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: SendAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 128
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous POST request with JSON-formatted payload to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task<HttpResponseHeaders> SendAsJsonAsync(this HttpRestClient client, HttpMethod method, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: method
      type: System.Net.Http.HttpMethod
      description: The HTTP method to use for the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.Headers.HttpResponseHeaders}
      description: A task representing the asynchronous operation, returning headers of the response.
    content.vb: Public Shared Function SendAsJsonAsync(client As HttpRestClient, method As HttpMethod, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of HttpResponseHeaders)
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">method</code>, <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.SendAsJsonAsync(HttpRestClient, HttpMethod, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync(Kampute.HttpClient.HttpRestClient, System.Net.Http.HttpMethod, String, Object, System.Threading.CancellationToken)
  name.vb: SendAsJsonAsync(HttpRestClient, HttpMethod, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  id: PostAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: PostAsJsonAsync<T>(HttpRestClient, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.PostAsJsonAsync<T>(HttpRestClient, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync<T>(Kampute.HttpClient.HttpRestClient, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PostAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 158
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous POST request with JSON-formatted payload to the specified URI.
  example: []
  syntax:
    content: public static Task<T?> PostAsJsonAsync<T>(this HttpRestClient client, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the object expected in the response.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function PostAsJsonAsync(Of T)(client As HttpRestClient, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.PostAsJsonAsync(Of T)(HttpRestClient, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, Object, System.Threading.CancellationToken)
  name.vb: PostAsJsonAsync(Of T)(HttpRestClient, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  id: PostAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: PostAsJsonAsync(HttpRestClient, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.PostAsJsonAsync(HttpRestClient, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync(Kampute.HttpClient.HttpRestClient, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PostAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 177
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous POST request with JSON-formatted payload to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task PostAsJsonAsync(this HttpRestClient client, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function PostAsJsonAsync(client As HttpRestClient, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.PostAsJsonAsync(HttpRestClient, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync(Kampute.HttpClient.HttpRestClient, String, Object, System.Threading.CancellationToken)
  name.vb: PostAsJsonAsync(HttpRestClient, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  id: PutAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: PutAsJsonAsync<T>(HttpRestClient, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.PutAsJsonAsync<T>(HttpRestClient, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync<T>(Kampute.HttpClient.HttpRestClient, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PutAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 197
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous PUT request with JSON-formatted payload to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> PutAsJsonAsync<T>(this HttpRestClient client, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task that represents the asynchronous operation, with a result of the specified type.
    content.vb: Public Shared Function PutAsJsonAsync(Of T)(client As HttpRestClient, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.PutAsJsonAsync(Of T)(HttpRestClient, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, Object, System.Threading.CancellationToken)
  name.vb: PutAsJsonAsync(Of T)(HttpRestClient, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  id: PutAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: PutAsJsonAsync(HttpRestClient, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.PutAsJsonAsync(HttpRestClient, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync(Kampute.HttpClient.HttpRestClient, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PutAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 216
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous PUT request with JSON-formatted payload to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task PutAsJsonAsync(this HttpRestClient client, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function PutAsJsonAsync(client As HttpRestClient, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.PutAsJsonAsync(HttpRestClient, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync(Kampute.HttpClient.HttpRestClient, String, Object, System.Threading.CancellationToken)
  name.vb: PutAsJsonAsync(HttpRestClient, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  id: PatchAsJsonAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: PatchAsJsonAsync<T>(HttpRestClient, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.PatchAsJsonAsync<T>(HttpRestClient, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync<T>(Kampute.HttpClient.HttpRestClient, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PatchAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 236
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous PATCH request with JSON-formatted payload to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> PatchAsJsonAsync<T>(this HttpRestClient client, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task that represents the asynchronous operation, with a result of the specified type.
    content.vb: Public Shared Function PatchAsJsonAsync(Of T)(client As HttpRestClient, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.PatchAsJsonAsync(Of T)(HttpRestClient, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, Object, System.Threading.CancellationToken)
  name.vb: PatchAsJsonAsync(Of T)(HttpRestClient, String, Object, CancellationToken)
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  id: PatchAsJsonAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Object,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions
  langs:
  - csharp
  - vb
  name: PatchAsJsonAsync(HttpRestClient, string, object, CancellationToken)
  nameWithType: HttpRestClientJsonExtensions.PatchAsJsonAsync(HttpRestClient, string, object, CancellationToken)
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync(Kampute.HttpClient.HttpRestClient, string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PatchAsJsonAsync
    path: src/Kampute.HttpClient.NewtonsoftJson/HttpRestClientJsonExtensions.cs
    startLine: 255
  assemblies:
  - Kampute.HttpClient.NewtonsoftJson
  namespace: Kampute.HttpClient.NewtonsoftJson
  summary: Sends an asynchronous PATCH request with JSON-formatted payload to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task PatchAsJsonAsync(this HttpRestClient client, string uri, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Object
      description: The object to serialize as the JSON-formatted HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function PatchAsJsonAsync(client As HttpRestClient, uri As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> or <code class="paramref">payload</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientJsonExtensions.PatchAsJsonAsync(HttpRestClient, String, Object, CancellationToken)
  fullName.vb: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync(Kampute.HttpClient.HttpRestClient, String, Object, System.Threading.CancellationToken)
  name.vb: PatchAsJsonAsync(HttpRestClient, String, Object, CancellationToken)
references:
- uid: Kampute.HttpClient.HttpRestClient
  commentId: T:Kampute.HttpClient.HttpRestClient
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpRestClient.html
  name: HttpRestClient
  nameWithType: HttpRestClient
  fullName: Kampute.HttpClient.HttpRestClient
- uid: Kampute.HttpClient.NewtonsoftJson
  commentId: N:Kampute.HttpClient.NewtonsoftJson
  href: Kampute.html
  name: Kampute.HttpClient.NewtonsoftJson
  nameWithType: Kampute.HttpClient.NewtonsoftJson
  fullName: Kampute.HttpClient.NewtonsoftJson
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.NewtonsoftJson
    name: NewtonsoftJson
    href: Kampute.HttpClient.NewtonsoftJson.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  - name: .
  - uid: Kampute.HttpClient.NewtonsoftJson
    name: NewtonsoftJson
    href: Kampute.HttpClient.NewtonsoftJson.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Kampute.HttpClient
  commentId: N:Kampute.HttpClient
  href: Kampute.html
  name: Kampute.HttpClient
  nameWithType: Kampute.HttpClient
  fullName: Kampute.HttpClient
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Newtonsoft.Json.JsonSerializerSettings
  commentId: T:Newtonsoft.Json.JsonSerializerSettings
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializerSettings
  nameWithType: JsonSerializerSettings
  fullName: Newtonsoft.Json.JsonSerializerSettings
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_SetJsonSerializerSettings_Kampute_HttpClient_HttpRestClient_Newtonsoft_Json_JsonSerializerSettings_
  name: SetJsonSerializerSettings
  nameWithType: HttpRestClientJsonExtensions.SetJsonSerializerSettings
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SetJsonSerializerSettings
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_GetJsonSerializerSettings_Kampute_HttpClient_HttpRestClient_
  name: GetJsonSerializerSettings
  nameWithType: HttpRestClientJsonExtensions.GetJsonSerializerSettings
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.GetJsonSerializerSettings
- uid: Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer
  commentId: T:Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer
  parent: Kampute.HttpClient.NewtonsoftJson
  href: Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer.html
  name: JsonContentDeserializer
  nameWithType: JsonContentDeserializer
  fullName: Kampute.HttpClient.NewtonsoftJson.JsonContentDeserializer
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_AcceptJson_Kampute_HttpClient_HttpRestClient_Newtonsoft_Json_JsonSerializerSettings_
  name: AcceptJson
  nameWithType: HttpRestClientJsonExtensions.AcceptJson
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.AcceptJson
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Kampute.HttpClient.HttpResponseException
  commentId: T:Kampute.HttpClient.HttpResponseException
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpResponseException.html
  name: HttpResponseException
  nameWithType: HttpResponseException
  fullName: Kampute.HttpClient.HttpResponseException
- uid: System.Net.Http.HttpRequestException
  commentId: T:System.Net.Http.HttpRequestException
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestexception
  name: HttpRequestException
  nameWithType: HttpRequestException
  fullName: System.Net.Http.HttpRequestException
- uid: Kampute.HttpClient.HttpContentException
  commentId: T:Kampute.HttpClient.HttpContentException
  href: Kampute.HttpClient.HttpContentException.html
  name: HttpContentException
  nameWithType: HttpContentException
  fullName: Kampute.HttpClient.HttpContentException
- uid: System.Threading.Tasks.TaskCanceledException
  commentId: T:System.Threading.Tasks.TaskCanceledException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception
  name: TaskCanceledException
  nameWithType: TaskCanceledException
  fullName: System.Threading.Tasks.TaskCanceledException
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_SendAsJsonAsync__1_Kampute_HttpClient_HttpRestClient_System_Net_Http_HttpMethod_System_String_System_Object_System_Threading_CancellationToken_
  name: SendAsJsonAsync
  nameWithType: HttpRestClientJsonExtensions.SendAsJsonAsync
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.SendAsJsonAsync
- uid: System.Net.Http.HttpMethod
  commentId: T:System.Net.Http.HttpMethod
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpmethod
  name: HttpMethod
  nameWithType: HttpMethod
  fullName: System.Net.Http.HttpMethod
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Threading.Tasks.Task{System.Net.Http.Headers.HttpResponseHeaders}
  commentId: T:System.Threading.Tasks.Task{System.Net.Http.Headers.HttpResponseHeaders}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<HttpResponseHeaders>
  nameWithType: Task<HttpResponseHeaders>
  fullName: System.Threading.Tasks.Task<System.Net.Http.Headers.HttpResponseHeaders>
  nameWithType.vb: Task(Of HttpResponseHeaders)
  fullName.vb: System.Threading.Tasks.Task(Of System.Net.Http.Headers.HttpResponseHeaders)
  name.vb: Task(Of HttpResponseHeaders)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Net.Http.Headers.HttpResponseHeaders
    name: HttpResponseHeaders
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.httpresponseheaders
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Net.Http.Headers.HttpResponseHeaders
    name: HttpResponseHeaders
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http.headers.httpresponseheaders
  - name: )
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_PostAsJsonAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Object_System_Threading_CancellationToken_
  name: PostAsJsonAsync
  nameWithType: HttpRestClientJsonExtensions.PostAsJsonAsync
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PostAsJsonAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_PutAsJsonAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Object_System_Threading_CancellationToken_
  name: PutAsJsonAsync
  nameWithType: HttpRestClientJsonExtensions.PutAsJsonAsync
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PutAsJsonAsync
- uid: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync*
  commentId: Overload:Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync
  href: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.html#Kampute_HttpClient_NewtonsoftJson_HttpRestClientJsonExtensions_PatchAsJsonAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Object_System_Threading_CancellationToken_
  name: PatchAsJsonAsync
  nameWithType: HttpRestClientJsonExtensions.PatchAsJsonAsync
  fullName: Kampute.HttpClient.NewtonsoftJson.HttpRestClientJsonExtensions.PatchAsJsonAsync
