### YamlMime:ManagedReference
items:
- uid: Kampute.HttpClient.HttpRestClientExtensions
  commentId: T:Kampute.HttpClient.HttpRestClientExtensions
  id: HttpRestClientExtensions
  parent: Kampute.HttpClient
  children:
  - Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.GetAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.PatchAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.PatchAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.PostAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.PostAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.PutAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  - Kampute.HttpClient.HttpRestClientExtensions.PutAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: HttpRestClientExtensions
  nameWithType: HttpRestClientExtensions
  fullName: Kampute.HttpClient.HttpRestClientExtensions
  type: Class
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: HttpRestClientExtensions
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 22
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: >-
    Provides extension methods for <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> to facilitate sending HTTP requests using various methods, 

    including GET, POST, PUT, PATCH, and DELETE.
  remarks: >-
    This static class enriches <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> by adding convenient extension methods for making HTTP requests.

    These methods simplify the process of constructing and sending requests for common HTTP methods, enabling more readable 

    and concise client code.
  example: []
  syntax:
    content: public static class HttpRestClientExtensions
    content.vb: Public Module HttpRestClientExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Kampute.HttpClient.HttpRestClientExtensions.GetAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.GetAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  id: GetAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: GetAsync<T>(HttpRestClient, string, CancellationToken)
  nameWithType: HttpRestClientExtensions.GetAsync<T>(HttpRestClient, string, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.GetAsync<T>(Kampute.HttpClient.HttpRestClient, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: GetAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 37
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous GET request to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> GetAsync<T>(this HttpRestClient client, string uri, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function GetAsync(Of T)(client As HttpRestClient, uri As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.HttpRestClientExtensions.GetAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.GetAsync(Of T)(HttpRestClient, String, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.GetAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(HttpRestClient, String, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.PostAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.PostAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PostAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: PostAsync<T>(HttpRestClient, string, HttpContent?, CancellationToken)
  nameWithType: HttpRestClientExtensions.PostAsync<T>(HttpRestClient, string, HttpContent?, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PostAsync<T>(Kampute.HttpClient.HttpRestClient, string, System.Net.Http.HttpContent?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PostAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 57
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous POST request to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> PostAsync<T>(this HttpRestClient client, string uri, HttpContent? payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Net.Http.HttpContent
      description: The HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function PostAsync(Of T)(client As HttpRestClient, uri As String, payload As HttpContent, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.HttpRestClientExtensions.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.PostAsync(Of T)(HttpRestClient, String, HttpContent, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.PostAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  name.vb: PostAsync(Of T)(HttpRestClient, String, HttpContent, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.PostAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.PostAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PostAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: PostAsync(HttpRestClient, string, HttpContent?, CancellationToken)
  nameWithType: HttpRestClientExtensions.PostAsync(HttpRestClient, string, HttpContent?, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PostAsync(Kampute.HttpClient.HttpRestClient, string, System.Net.Http.HttpContent?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PostAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 76
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous POST request to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task PostAsync(this HttpRestClient client, string uri, HttpContent? payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Net.Http.HttpContent
      description: The HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function PostAsync(client As HttpRestClient, uri As String, payload As HttpContent, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.HttpRestClientExtensions.PostAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.PostAsync(HttpRestClient, String, HttpContent, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.PostAsync(Kampute.HttpClient.HttpRestClient, String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  name.vb: PostAsync(HttpRestClient, String, HttpContent, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.PutAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.PutAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PutAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: PutAsync<T>(HttpRestClient, string, HttpContent?, CancellationToken)
  nameWithType: HttpRestClientExtensions.PutAsync<T>(HttpRestClient, string, HttpContent?, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PutAsync<T>(Kampute.HttpClient.HttpRestClient, string, System.Net.Http.HttpContent?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PutAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 96
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous PUT request to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> PutAsync<T>(this HttpRestClient client, string uri, HttpContent? payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Net.Http.HttpContent
      description: The HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function PutAsync(Of T)(client As HttpRestClient, uri As String, payload As HttpContent, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.HttpRestClientExtensions.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.PutAsync(Of T)(HttpRestClient, String, HttpContent, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.PutAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  name.vb: PutAsync(Of T)(HttpRestClient, String, HttpContent, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.PutAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.PutAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PutAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: PutAsync(HttpRestClient, string, HttpContent?, CancellationToken)
  nameWithType: HttpRestClientExtensions.PutAsync(HttpRestClient, string, HttpContent?, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PutAsync(Kampute.HttpClient.HttpRestClient, string, System.Net.Http.HttpContent?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PutAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 115
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous PUT request to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task PutAsync(this HttpRestClient client, string uri, HttpContent? payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Net.Http.HttpContent
      description: The HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function PutAsync(client As HttpRestClient, uri As String, payload As HttpContent, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.HttpRestClientExtensions.PutAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.PutAsync(HttpRestClient, String, HttpContent, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.PutAsync(Kampute.HttpClient.HttpRestClient, String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  name.vb: PutAsync(HttpRestClient, String, HttpContent, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.PatchAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PatchAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: PatchAsync<T>(HttpRestClient, string, HttpContent?, CancellationToken)
  nameWithType: HttpRestClientExtensions.PatchAsync<T>(HttpRestClient, string, HttpContent?, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync<T>(Kampute.HttpClient.HttpRestClient, string, System.Net.Http.HttpContent?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PatchAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 135
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous PATCH request to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> PatchAsync<T>(this HttpRestClient client, string uri, HttpContent? payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Net.Http.HttpContent
      description: The HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function PatchAsync(Of T)(client As HttpRestClient, uri As String, payload As HttpContent, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.PatchAsync(Of T)(HttpRestClient, String, HttpContent, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  name.vb: PatchAsync(Of T)(HttpRestClient, String, HttpContent, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.PatchAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  id: PatchAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: PatchAsync(HttpRestClient, string, HttpContent?, CancellationToken)
  nameWithType: HttpRestClientExtensions.PatchAsync(HttpRestClient, string, HttpContent?, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync(Kampute.HttpClient.HttpRestClient, string, System.Net.Http.HttpContent?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: PatchAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 154
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous PATCH request to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task PatchAsync(this HttpRestClient client, string uri, HttpContent? payload, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: payload
      type: System.Net.Http.HttpContent
      description: The HTTP request payload.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function PatchAsync(client As HttpRestClient, uri As String, payload As HttpContent, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.PatchAsync(HttpRestClient, String, HttpContent, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync(Kampute.HttpClient.HttpRestClient, String, System.Net.Http.HttpContent, System.Threading.CancellationToken)
  name.vb: PatchAsync(HttpRestClient, String, HttpContent, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  id: DeleteAsync``1(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync<T>(HttpRestClient, string, CancellationToken)
  nameWithType: HttpRestClientExtensions.DeleteAsync<T>(HttpRestClient, string, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync<T>(Kampute.HttpClient.HttpRestClient, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: DeleteAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 173
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous DELETE request to the specified URI and returns the response body deserialized as the specified type.
  example: []
  syntax:
    content: public static Task<T?> DeleteAsync<T>(this HttpRestClient client, string uri, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    typeParameters:
    - id: T
      description: The type of the response object.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: A task representing the asynchronous operation, returning a deserialized object of type <code class="typeparamref">T</code>.
    content.vb: Public Shared Function DeleteAsync(Of T)(client As HttpRestClient, uri As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.DeleteAsync(Of T)(HttpRestClient, String, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync(Of T)(Kampute.HttpClient.HttpRestClient, String, System.Threading.CancellationToken)
  name.vb: DeleteAsync(Of T)(HttpRestClient, String, CancellationToken)
- uid: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  commentId: M:Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  id: DeleteAsync(Kampute.HttpClient.HttpRestClient,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: Kampute.HttpClient.HttpRestClientExtensions
  langs:
  - csharp
  - vb
  name: DeleteAsync(HttpRestClient, string, CancellationToken)
  nameWithType: HttpRestClientExtensions.DeleteAsync(HttpRestClient, string, CancellationToken)
  fullName: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync(Kampute.HttpClient.HttpRestClient, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
      branch: master
      repo: https://github.com/kampute/http-client
    id: DeleteAsync
    path: src/Kampute.HttpClient/HttpRestClientExtensions.cs
    startLine: 191
  assemblies:
  - Kampute.HttpClient
  namespace: Kampute.HttpClient
  summary: Sends an asynchronous DELETE request to the specified URI without processing the response body.
  example: []
  syntax:
    content: public static Task DeleteAsync(this HttpRestClient client, string uri, CancellationToken cancellationToken = default)
    parameters:
    - id: client
      type: Kampute.HttpClient.HttpRestClient
      description: The <xref href="Kampute.HttpClient.HttpRestClient" data-throw-if-not-resolved="false"></xref> instance to be used for sending the request.
    - id: uri
      type: System.String
      description: The URI to which the request is sent.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token for canceling the request (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task that represents the asynchronous operation.
    content.vb: Public Shared Function DeleteAsync(client As HttpRestClient, uri As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if <code class="paramref">uri</code> is <code>null</code>.
  - type: Kampute.HttpClient.HttpResponseException
    commentId: T:Kampute.HttpClient.HttpResponseException
    description: Thrown if the response status code indicates a failure.
  - type: System.Net.Http.HttpRequestException
    commentId: T:System.Net.Http.HttpRequestException
    description: Thrown if the request fails due to an underlying issue such as network connectivity, DNS failure, server certificate validation, or timeout.
  - type: Kampute.HttpClient.HttpContentException
    commentId: T:Kampute.HttpClient.HttpContentException
    description: Thrown if the content type of the response is either unknown or not supported.
  - type: System.Threading.Tasks.TaskCanceledException
    commentId: T:System.Threading.Tasks.TaskCanceledException
    description: Thrown if the operation is canceled via the cancellation token.
  nameWithType.vb: HttpRestClientExtensions.DeleteAsync(HttpRestClient, String, CancellationToken)
  fullName.vb: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync(Kampute.HttpClient.HttpRestClient, String, System.Threading.CancellationToken)
  name.vb: DeleteAsync(HttpRestClient, String, CancellationToken)
references:
- uid: Kampute.HttpClient.HttpRestClient
  commentId: T:Kampute.HttpClient.HttpRestClient
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpRestClient.html
  name: HttpRestClient
  nameWithType: HttpRestClient
  fullName: Kampute.HttpClient.HttpRestClient
- uid: Kampute.HttpClient
  commentId: N:Kampute.HttpClient
  href: Kampute.html
  name: Kampute.HttpClient
  nameWithType: Kampute.HttpClient
  fullName: Kampute.HttpClient
  spec.csharp:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
  spec.vb:
  - uid: Kampute
    name: Kampute
    href: Kampute.html
  - name: .
  - uid: Kampute.HttpClient
    name: HttpClient
    href: Kampute.HttpClient.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: Kampute.HttpClient.HttpResponseException
  commentId: T:Kampute.HttpClient.HttpResponseException
  parent: Kampute.HttpClient
  href: Kampute.HttpClient.HttpResponseException.html
  name: HttpResponseException
  nameWithType: HttpResponseException
  fullName: Kampute.HttpClient.HttpResponseException
- uid: System.Net.Http.HttpRequestException
  commentId: T:System.Net.Http.HttpRequestException
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httprequestexception
  name: HttpRequestException
  nameWithType: HttpRequestException
  fullName: System.Net.Http.HttpRequestException
- uid: Kampute.HttpClient.HttpContentException
  commentId: T:Kampute.HttpClient.HttpContentException
  href: Kampute.HttpClient.HttpContentException.html
  name: HttpContentException
  nameWithType: HttpContentException
  fullName: Kampute.HttpClient.HttpContentException
- uid: System.Threading.Tasks.TaskCanceledException
  commentId: T:System.Threading.Tasks.TaskCanceledException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.taskcanceledexception
  name: TaskCanceledException
  nameWithType: TaskCanceledException
  fullName: System.Threading.Tasks.TaskCanceledException
- uid: Kampute.HttpClient.HttpRestClientExtensions.GetAsync*
  commentId: Overload:Kampute.HttpClient.HttpRestClientExtensions.GetAsync
  href: Kampute.HttpClient.HttpRestClientExtensions.html#Kampute_HttpClient_HttpRestClientExtensions_GetAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Threading_CancellationToken_
  name: GetAsync
  nameWithType: HttpRestClientExtensions.GetAsync
  fullName: Kampute.HttpClient.HttpRestClientExtensions.GetAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Kampute.HttpClient.HttpRestClientExtensions.PostAsync*
  commentId: Overload:Kampute.HttpClient.HttpRestClientExtensions.PostAsync
  href: Kampute.HttpClient.HttpRestClientExtensions.html#Kampute_HttpClient_HttpRestClientExtensions_PostAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_
  name: PostAsync
  nameWithType: HttpRestClientExtensions.PostAsync
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PostAsync
- uid: System.Net.Http.HttpContent
  commentId: T:System.Net.Http.HttpContent
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpcontent
  name: HttpContent
  nameWithType: HttpContent
  fullName: System.Net.Http.HttpContent
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Kampute.HttpClient.HttpRestClientExtensions.PutAsync*
  commentId: Overload:Kampute.HttpClient.HttpRestClientExtensions.PutAsync
  href: Kampute.HttpClient.HttpRestClientExtensions.html#Kampute_HttpClient_HttpRestClientExtensions_PutAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_
  name: PutAsync
  nameWithType: HttpRestClientExtensions.PutAsync
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PutAsync
- uid: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync*
  commentId: Overload:Kampute.HttpClient.HttpRestClientExtensions.PatchAsync
  href: Kampute.HttpClient.HttpRestClientExtensions.html#Kampute_HttpClient_HttpRestClientExtensions_PatchAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Net_Http_HttpContent_System_Threading_CancellationToken_
  name: PatchAsync
  nameWithType: HttpRestClientExtensions.PatchAsync
  fullName: Kampute.HttpClient.HttpRestClientExtensions.PatchAsync
- uid: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync*
  commentId: Overload:Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync
  href: Kampute.HttpClient.HttpRestClientExtensions.html#Kampute_HttpClient_HttpRestClientExtensions_DeleteAsync__1_Kampute_HttpClient_HttpRestClient_System_String_System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: HttpRestClientExtensions.DeleteAsync
  fullName: Kampute.HttpClient.HttpRestClientExtensions.DeleteAsync
